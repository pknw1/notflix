(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{HKjN:function(e,n,i){"use strict";function t(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}function r(e,n){for(var i=[],t=n.getProgramParameter(e,n.ACTIVE_UNIFORMS),r=0;r<t;r++){var o=n.getActiveUniform(e,r).name;i[o]=n.getUniformLocation(e,o)}return i}function o(e,n,i){var t=i.createProgram();return i.attachShader(t,e),i.attachShader(t,n),i.linkProgram(t),i.getProgramParameter(t,i.LINK_STATUS)||console.trace(i.getProgramInfoLog(t)),t}function a(e,n,i,t){n=function(e,n){if(null==n)return e;var i="";return n.forEach((function(e){i+="#define "+e+"\n"})),i+e}(n,t);var r=i.createShader(e);return i.shaderSource(r,n),i.compileShader(r),i.getShaderParameter(r,i.COMPILE_STATUS)||console.trace(i.getShaderInfoLog(r)),r}function u(e,n,i,t){if(!function(e,n,i,t){var r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,i,t,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE}(e,n,i,t))switch(n){case e.R16F:return u(e,e.RG16F,e.RG,t);case e.RG16F:return u(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:n,format:i}}function c(e){var n=window.devicePixelRatio||1;return Math.floor(e*n)}function v(e,n){return Math.random()*(n-e)+e}function l(e){if(0===e.length)return 0;for(var n=0,i=0;i<e.length;i++)n=(n<<5)-n+e.charCodeAt(i),n|=0;return n}i.r(n),i.d(n,"default",(function(){return m}));var f=function(){function e(e,n,i){this.vertexShader=e,this.fragmentShaderSource=n,this.programs=[],this.activeProgram=null,this.uniforms=[],this.gl=i}var n=e.prototype;return n.setKeywords=function(e){for(var n=0,i=0;i<e.length;i++)n+=l(e[i]);var t=this.programs[n];if(null==t){var u=a(this.gl.FRAGMENT_SHADER,this.fragmentShaderSource,this.gl,e);t=o(this.vertexShader,u,this.gl),this.programs[n]=t}t!==this.activeProgram&&(this.uniforms=r(t,this.gl),this.activeProgram=t)},n.bind=function(){this.gl.useProgram(this.activeProgram)},e}(),s=function(){function e(e,n,i){this.uniforms={},this.gl=i,this.program=o(e,n,this.gl),this.uniforms=r(this.program,this.gl)}return e.prototype.bind=function(){this.gl.useProgram(this.program)},e}(),m=function(){function e(e,n){var i=this;this.onMouseMove=function(e){var n=c(e.offsetX),r=c(e.offsetY),o=i.pointers.find((function(e){return-1===e.id}));null==o&&(o=new t),i.updatePointerMoveData(o,n,r)},this.onResize=function(e){i.resizeCanvas()&&i.initFramebuffers()};var r=function(e){var n,i,t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},r=e.getContext("webgl2",t),o=!!r;o||(r=e.getContext("webgl",t)||e.getContext("experimental-webgl",t)),o?(r.getExtension("EXT_color_buffer_float"),i=r.getExtension("OES_texture_float_linear")):(n=r.getExtension("OES_texture_half_float"),i=r.getExtension("OES_texture_half_float_linear")),r.clearColor(0,0,0,1);var a,c,v,l=o?r.HALF_FLOAT:n.HALF_FLOAT_OES;return o?(a=u(r,r.RGBA16F,r.RGBA,l),c=u(r,r.RG16F,r.RG,l),v=u(r,r.R16F,r.RED,l)):(a=u(r,r.RGBA,r.RGBA,l),c=u(r,r.RGBA,r.RGBA,l),v=u(r,r.RGBA,r.RGBA,l)),{gl:r,ext:{formatRGBA:a,formatRG:c,formatR:v,halfFloatTexType:l,supportLinearFiltering:i}}}(e),o=r.gl,a=r.ext;this.el=e,this.gl=o,this.ext=a,this.config=n,this.paused=!1,this.pointers=[],this.splatStack=[],this.init()}var n=e.prototype;return n.init=function(){var e,n=this,i=this.gl,r=this.ext;this.pointers.push(new t),/Mobi|Android/i.test(navigator.userAgent)&&(this.config.DYE_RESOLUTION=512),r.supportLinearFiltering||(this.config.DYE_RESOLUTION=512,this.config.SHADING=!1,this.config.BLOOM=!1,this.config.SUNRAYS=!1),this.dye=null,this.velocity=null,this.divergence=null,this.curl=null,this.pressure=null;var o,u,c=[],l=0,m=0,h=0,g=0,d=function(e,n){var i=n.createTexture();n.bindTexture(n.TEXTURE_2D,i),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.REPEAT),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.REPEAT),n.texImage2D(n.TEXTURE_2D,0,n.RGB,1,1,0,n.RGB,n.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var t={texture:i,width:1,height:1,attach:function(e){return n.activeTexture(n.TEXTURE0+e),n.bindTexture(n.TEXTURE_2D,i),e}},r=new Image;return r.onload=function(){t.width=r.width,t.height=r.height,n.bindTexture(n.TEXTURE_2D,i),n.texImage2D(n.TEXTURE_2D,0,n.RGB,n.RGB,n.UNSIGNED_BYTE,r)},r.src=e,t}("/LDR_LLL1_0.png",this.gl),x=a(i.VERTEX_SHADER,"\n  precision highp float;\n\n  attribute vec2 aPosition;\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  uniform vec2 texelSize;\n\n  void main () {\n      vUv = aPosition * 0.5 + 0.5;\n      float offset = 1.33333333;\n      vL = vUv - texelSize * offset;\n      vR = vUv + texelSize * offset;\n      gl_Position = vec4(aPosition, 0.0, 1.0);\n  }\n",i),T=a(i.VERTEX_SHADER,"\n  precision highp float;\n\n  attribute vec2 aPosition;\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  uniform vec2 texelSize;\n\n  void main () {\n      vUv = aPosition * 0.5 + 0.5;\n      vL = vUv - vec2(texelSize.x, 0.0);\n      vR = vUv + vec2(texelSize.x, 0.0);\n      vT = vUv + vec2(0.0, texelSize.y);\n      vB = vUv - vec2(0.0, texelSize.y);\n      gl_Position = vec4(aPosition, 0.0, 1.0);\n  }\n",i),R=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n",i),E=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n",i),p=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n",i),D=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n",i),y=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n",i),S=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n",i),_=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n",i),A=a(i.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n",i),F=a(i.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n",i),U=a(i.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n",i),L=a(i.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",i,r.supportLinearFiltering?null:["MANUAL_FILTERING"]),b=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        // viewport bounce effect\n        //if (vL.x < 0.0) { L = -C.x; }\n        //if (vR.x > 1.0) { R = -C.x; }\n        //if (vT.y > 1.0) { T = -C.y; }\n        //if (vB.y < 0.0) { B = -C.y; }\n\n//        float div = 0.5 * (R - L + T - B);\n        float div = 0.2 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 0.0);\n    }\n",i),B=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n",i),w=a(i.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity += force * dt;\n        velocity = min(max(velocity, -1000.0), 1000.0);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n",i),O=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.23;\n        //float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n",i),N=a(i.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n",i),z=new s(x,p,i),M=new s(T,E,i),P=new s(T,D,i),X=new s(T,R,i),I=new s(T,y,i),C=new s(T,S,i),G=new s(T,_,i),Y=new s(T,A,i),H=new s(T,F,i),V=new s(T,U,i),W=new s(T,L,i),k=new s(T,b,i),q=new s(T,B,i),K=new s(T,w,i),J=new s(T,O,i),j=new s(T,N,i),Q=new f(T,"\n    precision highp float;\n    precision highp sampler2D;\n\n    //varying highp vec2 vUv;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n    uniform float dt;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    float random (vec2 p) {\n        vec2 K1 = vec2(\n          23.14069263277926, // e^pi (Gelfond's constant)\n          2.665144142690225  // 2^sqrt(2) (Gelfondâ€“Schneider constant)\n        );\n        return fract(cos(dot(p,K1)) * 12345.6789);\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        vec2 uvRandom = vUv;\n\n        uvRandom.y *= random(vec2(uvRandom.y, dt));\n        float noise2 = max(0.4, random(uvRandom));\n        c *= noise2;\n\n        float a = max(c.r, max(c.g, c.b));\n\n        gl_FragColor = vec4(c, a);\n    }\n",i),Z=[];this.config.SHADING&&Z.push("SHADING"),this.config.BLOOM&&Z.push("BLOOM"),this.config.SUNRAYS&&Z.push("SUNRAYS"),Q.setKeywords(Z);var $=(i.bindBuffer(i.ARRAY_BUFFER,i.createBuffer()),i.bufferData(i.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,i.createBuffer()),i.bufferData(i.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),i.STATIC_DRAW),i.vertexAttribPointer(0,2,i.FLOAT,!1,0,0),i.enableVertexAttribArray(0),function(e,n){void 0===n&&(n=!1),null==e?(i.viewport(0,0,i.drawingBufferWidth,i.drawingBufferHeight),i.bindFramebuffer(i.FRAMEBUFFER,null)):(i.viewport(0,0,e.width,e.height),i.bindFramebuffer(i.FRAMEBUFFER,e.fbo)),n&&(i.clearColor(0,0,0,1),i.clear(i.COLOR_BUFFER_BIT)),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0)});this.initBloomFramebuffers=function(){var t=n.getResolution(n.config.BLOOM_RESOLUTION),o=r.halfFloatTexType,a=r.formatRGBA,u=r.supportLinearFiltering?i.LINEAR:i.NEAREST;e=n.createFBO(t.width,t.height,a.internalFormat,a.format,o,u),c.length=0;for(var v=0;v<n.config.BLOOM_ITERATIONS;v++){var l=t.width>>v+1,f=t.height>>v+1;if(l<2||f<2)break;var s=n.createFBO(l,f,a.internalFormat,a.format,o,u);c.push(s)}},this.initSunraysFramebuffers=function(){var e=n.getResolution(n.config.SUNRAYS_RESOLUTION),t=r.halfFloatTexType,a=r.formatR,c=r.supportLinearFiltering?i.LINEAR:i.NEAREST;o=n.createFBO(e.width,e.height,a.internalFormat,a.format,t,c),u=n.createFBO(e.width,e.height,a.internalFormat,a.format,t,c)},this.createFBO=function(e,n,t,r,o,a){i.activeTexture(i.TEXTURE0);var u=i.createTexture();i.bindTexture(i.TEXTURE_2D,u),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,a),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,a),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,t,e,n,0,r,o,null);var c=i.createFramebuffer();return i.bindFramebuffer(i.FRAMEBUFFER,c),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,u,0),i.viewport(0,0,e,n),i.clear(i.COLOR_BUFFER_BIT),{texture:u,fbo:c,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function(e){return i.activeTexture(i.TEXTURE0+e),i.bindTexture(i.TEXTURE_2D,u),e}}},this.createDoubleFBO=function(e,i,t,r,o,a){var u=n.createFBO(e,i,t,r,o,a),c=n.createFBO(e,i,t,r,o,a);return{width:e,height:i,texelSizeX:u.texelSizeX,texelSizeY:u.texelSizeY,get read(){return u},set read(e){u=e},get write(){return c},set write(e){c=e},swap:function(){var e=u;u=c,c=e}}};this.resizeDoubleFBO=function(e,t,r,o,a,u,c){return e.width===t&&e.height===r||(e.read=function(e,t,r,o,a,u,c){var v=n.createFBO(t,r,o,a,u,c);return M.bind(),i.uniform1i(M.uniforms.uTexture,e.attach(0)),$(v),v}(e.read,t,r,o,a,u,c),e.write=n.createFBO(t,r,o,a,u,c),e.width=t,e.height=r,e.texelSizeX=1/t,e.texelSizeY=1/r),e};var ee=function(e){return g=(e-h)/1e3,g=Math.min(g,.016666),h=e,g},ne=function(e){l+=e*n.config.COLOR_UPDATE_SPEED,n.pointers.forEach((function(e){e.color=n.generateColor(l)}))},ie=function(){n.pointers.forEach((function(e){e.moved&&(e.moved=!1,le(e))}))},te=function(e){i.disable(i.BLEND),q.bind(),i.uniform2f(q.uniforms.texelSize,n.velocity.texelSizeX,n.velocity.texelSizeY),i.uniform1i(q.uniforms.uVelocity,n.velocity.read.attach(0)),$(n.curl),K.bind(),i.uniform2f(K.uniforms.texelSize,n.velocity.texelSizeX,n.velocity.texelSizeY),i.uniform1i(K.uniforms.uVelocity,n.velocity.read.attach(0)),i.uniform1i(K.uniforms.uCurl,n.curl.attach(1)),i.uniform1f(K.uniforms.curl,n.config.CURL),i.uniform1f(K.uniforms.dt,e),$(n.velocity.write),n.velocity.swap(),k.bind(),i.uniform2f(k.uniforms.texelSize,n.velocity.texelSizeX,n.velocity.texelSizeY),i.uniform1i(k.uniforms.uVelocity,n.velocity.read.attach(0)),$(n.divergence),P.bind(),i.uniform1i(P.uniforms.uTexture,n.pressure.read.attach(0)),i.uniform1f(P.uniforms.value,n.config.PRESSURE),$(n.pressure.write),n.pressure.swap(),J.bind(),i.uniform2f(J.uniforms.texelSize,n.velocity.texelSizeX,n.velocity.texelSizeY),i.uniform1i(J.uniforms.uDivergence,n.divergence.attach(0));for(var t=0;t<n.config.PRESSURE_ITERATIONS;t++)i.uniform1i(J.uniforms.uPressure,n.pressure.read.attach(1)),$(n.pressure.write),n.pressure.swap();j.bind(),i.uniform2f(j.uniforms.texelSize,n.velocity.texelSizeX,n.velocity.texelSizeY),i.uniform1i(j.uniforms.uPressure,n.pressure.read.attach(0)),i.uniform1i(j.uniforms.uVelocity,n.velocity.read.attach(1)),$(n.velocity.write),n.velocity.swap(),W.bind(),i.uniform2f(W.uniforms.texelSize,n.velocity.texelSizeX,n.velocity.texelSizeY),r.supportLinearFiltering||i.uniform2f(W.uniforms.dyeTexelSize,n.velocity.texelSizeX,n.velocity.texelSizeY);var o=n.velocity.read.attach(0);i.uniform1i(W.uniforms.uVelocity,o),i.uniform1i(W.uniforms.uSource,o),i.uniform1f(W.uniforms.dt,e),i.uniform1f(W.uniforms.dissipation,n.config.VELOCITY_DISSIPATION),$(n.velocity.write),n.velocity.swap(),r.supportLinearFiltering||i.uniform2f(W.uniforms.dyeTexelSize,n.dye.texelSizeX,n.dye.texelSizeY),i.uniform1i(W.uniforms.uVelocity,n.velocity.read.attach(0)),i.uniform1i(W.uniforms.uSource,n.dye.read.attach(1)),i.uniform1f(W.uniforms.dissipation,n.config.DENSITY_DISSIPATION),$(n.dye.write),n.dye.swap()},re=function(t){var r;n.config.BLOOM&&ue(n.dye.read,e),n.config.SUNRAYS&&(ce(n.dye.read,n.dye.write,o),ve(o,u,1)),null!=t&&n.config.TRANSPARENT?i.disable(i.BLEND):(i.blendFunc(i.ONE,i.ONE_MINUS_SRC_ALPHA),i.enable(i.BLEND)),n.config.TRANSPARENT||oe(t,{r:(r=n.config.BACK_COLOR).r/255,g:r.g/255,b:r.b/255,a:r.a}),ae(t)},oe=function(e,n){X.bind(),i.uniform4f(X.uniforms.color,n.r,n.g,n.b,n.a),$(e)},ae=function(t){var r=null==t?i.drawingBufferWidth:t.width,a=null==t?i.drawingBufferHeight:t.height;if(Q.bind(),i.uniform1f(Q.uniforms.dt,m),n.config.SHADING&&i.uniform2f(Q.uniforms.texelSize,1/r,1/a),i.uniform1i(Q.uniforms.uTexture,n.dye.read.attach(0)),n.config.BLOOM){i.uniform1i(Q.uniforms.uBloom,e.attach(1)),i.uniform1i(Q.uniforms.uDithering,d.attach(2));var u=me(d,r,a);i.uniform2f(Q.uniforms.ditherScale,u.x,u.y)}n.config.SUNRAYS&&i.uniform1i(Q.uniforms.uSunrays,o.attach(3)),$(t)},ue=function(e,t){if(!(c.length<2)){var r=t;i.disable(i.BLEND),I.bind();var o=n.config.BLOOM_THRESHOLD*n.config.BLOOM_SOFT_KNEE+1e-4,a=n.config.BLOOM_THRESHOLD-o,u=2*o,v=.25/o;i.uniform3f(I.uniforms.curve,a,u,v),i.uniform1f(I.uniforms.threshold,n.config.BLOOM_THRESHOLD),i.uniform1i(I.uniforms.uTexture,e.attach(0)),$(r),C.bind();for(var l=0;l<c.length;l++){var f=c[l];i.uniform2f(C.uniforms.texelSize,r.texelSizeX,r.texelSizeY),i.uniform1i(C.uniforms.uTexture,r.attach(0)),$(f),r=f}i.blendFunc(i.ONE,i.ONE),i.enable(i.BLEND);for(var s=c.length-2;s>=0;s--){var m=c[s];i.uniform2f(C.uniforms.texelSize,r.texelSizeX,r.texelSizeY),i.uniform1i(C.uniforms.uTexture,r.attach(0)),i.viewport(0,0,m.width,m.height),$(m),r=m}i.disable(i.BLEND),G.bind(),i.uniform2f(G.uniforms.texelSize,r.texelSizeX,r.texelSizeY),i.uniform1i(G.uniforms.uTexture,r.attach(0)),i.uniform1f(G.uniforms.intensity,n.config.BLOOM_INTENSITY),$(t)}},ce=function(e,t,r){i.disable(i.BLEND),Y.bind(),i.uniform1i(Y.uniforms.uTexture,e.attach(0)),$(t),H.bind(),i.uniform1f(H.uniforms.weight,n.config.SUNRAYS_WEIGHT),i.uniform1i(H.uniforms.uTexture,t.attach(0)),$(r)},ve=function(e,n,t){z.bind();for(var r=0;r<t;r++)i.uniform2f(z.uniforms.texelSize,e.texelSizeX,0),i.uniform1i(z.uniforms.uTexture,e.attach(0)),$(n),i.uniform2f(z.uniforms.texelSize,0,e.texelSizeY),i.uniform1i(z.uniforms.uTexture,n.attach(0)),$(e)},le=function(e){var i=e.deltaX*n.config.SPLAT_FORCE,t=e.deltaY*n.config.SPLAT_FORCE;fe(e.texcoordX,e.texcoordY,i,t,e.color)},fe=function(e,t,r,o,a,u){void 0===u&&(u=n.config.SPLAT_RADIUS),V.bind(),i.uniform1i(V.uniforms.uTarget,n.velocity.read.attach(0)),i.uniform1f(V.uniforms.aspectRatio,n.el.width/n.el.height),i.uniform2f(V.uniforms.point,e,t),i.uniform3f(V.uniforms.color,r,o,0),i.uniform1f(V.uniforms.radius,se(u/100)),$(n.velocity.write),n.velocity.swap(),i.uniform1i(V.uniforms.uTarget,n.dye.read.attach(0)),i.uniform3f(V.uniforms.color,a.r,a.g,a.b),$(n.dye.write),n.dye.swap()},se=function(e){var i=n.el.width/n.el.height;return i>1&&(e*=i),e},me=function(e,n,i){return{x:n/e.width,y:i/e.height}};this.resizeCanvas(),this.initFramebuffers();var he=this.generateColor(v(0,10)),ge=v(.5,1),de=function(e){for(var i=0;i<3;i++)fe((Math.sin(.8*e*3e3)+300*e)*ge,Math.sin(.3*e*2e3)*ge,20,20,he,n.config.SPLAT_RADIUS)};requestAnimationFrame((function e(i){n.paused||(ee(i),m+=g/1e3,ie(),ne(g),te(g),m<.002&&de(m),re(null)),requestAnimationFrame(e)})),this.inputListenersTimeout=window.setTimeout((function(){n.el.addEventListener("mousemove",n.onMouseMove)}),1e3),window.addEventListener("resize",this.onResize)},n.getResolution=function(e){var n=this.gl.drawingBufferWidth/this.gl.drawingBufferHeight;n<1&&(n=1/n);var i=Math.round(e),t=Math.round(e*n);return this.gl.drawingBufferWidth>this.gl.drawingBufferHeight?{width:t,height:i}:{width:i,height:t}},n.initFramebuffers=function(){var e=this.getResolution(this.config.SIM_RESOLUTION),n=this.getResolution(this.config.DYE_RESOLUTION),i=this.ext.halfFloatTexType,t=this.ext.formatRGBA,r=this.ext.formatRG,o=this.ext.formatR,a=this.ext.supportLinearFiltering?this.gl.LINEAR:this.gl.NEAREST;this.gl.disable(this.gl.BLEND),null==this.dye?this.dye=this.createDoubleFBO(n.width,n.height,t.internalFormat,t.format,i,a):this.dye=this.resizeDoubleFBO(this.dye,n.width,n.height,t.internalFormat,t.format,i,a),null==this.velocity?this.velocity=this.createDoubleFBO(e.width,e.height,r.internalFormat,r.format,i,a):this.velocity=this.resizeDoubleFBO(this.velocity,e.width,e.height,r.internalFormat,r.format,i,a),this.divergence=this.createFBO(e.width,e.height,o.internalFormat,o.format,i,this.gl.NEAREST),this.curl=this.createFBO(e.width,e.height,o.internalFormat,o.format,i,this.gl.NEAREST),this.pressure=this.createDoubleFBO(e.width,e.height,o.internalFormat,o.format,i,this.gl.NEAREST),this.initBloomFramebuffers(),this.initSunraysFramebuffers()},n.resizeCanvas=function(){var e=c(this.el.clientWidth),n=c(this.el.clientHeight);return(this.el.width!==e||this.el.height!==n)&&(this.el.width=e,this.el.height=n,!0)},n.generateColor=function(e){var n,i=(Math.sin(e)+1)/2,t=(n=i)<.5?8*n*n*n*n:1-Math.pow(-2*n+2,4)/2,r=function(e,n,i){var t,r,o,a,u,c,v,l;switch(c=i*(1-n),v=i*(1-(u=6*e-(a=Math.floor(6*e)))*n),l=i*(1-(1-u)*n),a%6){case 0:t=i,r=l,o=c;break;case 1:t=v,r=i,o=c;break;case 2:t=c,r=i,o=l;break;case 3:t=c,r=v,o=i;break;case 4:t=l,r=c,o=i;break;case 5:default:t=i,r=c,o=v}return{r:t,g:r,b:o}}((100*t+230)/360,t*(1-.66)+.66,-.5*t+.8);return r.r*=.15,r.g*=.15,r.b*=.15,r},n.updatePointerDownData=function(e,n,i,t){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=i/this.el.width,e.texcoordY=1-t/this.el.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0},n.updatePointerUpData=function(e){e.down=!1},n.updatePointerMoveData=function(e,n,i){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/this.el.width,e.texcoordY=1-i/this.el.height;var t=this.correctDeltaX(e.texcoordX-e.prevTexcoordX),r=this.correctDeltaY(e.texcoordY-e.prevTexcoordY);e.deltaX=0!==t?t:e.deltaX,e.deltaY=0!==r?r:e.deltaY,e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0},n.correctDeltaX=function(e){var n=this.el.width/this.el.height;return n<1&&(e*=n),e},n.correctDeltaY=function(e){var n=this.el.width/this.el.height;return n>1&&(e/=n),e},n.pause=function(){this.paused=!0},n.play=function(){this.paused=!1},n.dismount=function(){this.inputListenersTimeout?this.el.removeEventListener("mousemove",this.onMouseMove):clearTimeout(this.inputListenersTimeout),window.addEventListener("resize",this.onResize)},e}()}}]);
//# sourceMappingURL=49-864fd06d92ea259136b1.js.map