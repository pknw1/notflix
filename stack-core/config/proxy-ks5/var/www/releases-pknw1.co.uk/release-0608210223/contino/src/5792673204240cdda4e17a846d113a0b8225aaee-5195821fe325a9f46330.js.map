{"version":3,"sources":["webpack:///../node_modules/final-form-focus/dist/final-form-focus.es.js","webpack:///./src/utils/form.js","webpack:///../node_modules/final-form/dist/final-form.es.js","webpack:///./src/components/commons/BaseInput/index.js","webpack:///./src/components/commons/Field/index.js","webpack:///../node_modules/react-final-form/dist/react-final-form.es.js"],"names":["isFocusableInput","wtf","focus","getAllInputs","document","Array","prototype","slice","call","forms","reduce","accumulator","form","concat","filter","inputs","errors","find","input","name","noop","required","value","undefined","focusOnErrors","getInputs","findInput$$1","focusOnFirstError","firstInput","originalSubmit","submit","state","unsubscribe","subscribe","nextState","submitErrors","afterSubmit","_state","Object","keys","length","result","then","createDecorator","keysCache","keysRegex","toPath","key","Error","split","Boolean","getIn","complexKey","path","current","i","isArray","isNaN","_toPropertyKey","arg","hint","prim","Symbol","toPrimitive","res","TypeError","String","Number","_toPrimitive","setIn","destroyArrays","setInRecursor","index","_extends2","_ref","_result2","_result","numKeys","map","numericKey","_result3","_array","array","splice","ARRAY_ERROR","publishFieldState","formState","field","initialValues","lastSubmittedValues","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","modified","modifiedSinceLastSubmit","touched","validating","visited","error","submitError","initial","pristine","isEqual","valid","dirty","dirtySinceLastSubmit","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","version","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","getValidators","validators","validator","push","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","all","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldState","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getFieldState","getRegisteredFields","getState","initialize","savedDirtyValues","isValidationPaused","pauseValidation","registerField","fieldConfig","beforeSubmit","haveValidator","silent","getValidator","initialValue","defaultValue","validatorRemoved","lastOne","reset","restart","resumeValidation","setConfig","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","memoized","PrimitiveField","id","variant","placeholder","type","onChange","sx","otherProps","isPristine","handleChange","React","useCallback","e","Box","position","fontSize","theme","as","minHeight","MozAppearance","appearance","WebkitAppearance","m","borderRadius","width","pr","Text","htmlFor","pointerEvents","left","top","cursor","whiteSpace","transform","color","opacity","right","fontWeight","display","immediate","render","meta","mt","Field","maxLength","component","unit","immediateValidation","renderComponent","props","lazyProps","children","rest","assign","useWhenValueChanges","useRef","useEffect","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","useLatest","ref","addLazyState","defineProperty","get","enumerable","addLazyFormState","versions","ReactFinalForm","init","decorators","alternateFormApi","initialValuesEqual","_ref$subscription","f","_React$useState","initialState","setState","stateRef","unsubscriptions","s","decorator","reverse","renderProps","eventOrValues","handleSubmit","event","preventDefault","Provider","__versions","useForm","componentName","FormSpy","reactFinalForm","_temp","firstRender","onChangeRef","newState","lazyState","useFormState","isReactNative","window","navigator","product","all$1","defaultFormat","defaultParse","defaultIsEqual","useField","_config","allowNull","_config$format","format","formatOnBlur","multiple","_config$parse","parse","_config$subscription","_value","configRef","register","_configRef$current","_configRef$current$fo","formatted","handlers","onBlur","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","checked","options","option","selected","getSelectedValues","getValue","onFocus","addLazyFieldMetaState"],"mappings":"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","file":"5792673204240cdda4e17a846d113a0b8225aaee-5195821fe325a9f46330.js","sourcesContent":["import { getIn } from 'final-form'; //      \n\n/**\n * Predicate to identify inputs that can have focus() called on them\n */\n\nvar isFocusableInput = function isFocusableInput(wtf) {\n  return !!(wtf && typeof wtf.focus === 'function');\n}; //      \n\n/**\n * Gets all the inputs inside all forms on the page\n */\n\n\nvar getAllInputs = function getAllInputs() {\n  if (typeof document === 'undefined') {\n    return [];\n  }\n\n  return Array.prototype.slice.call(document.forms).reduce(function (accumulator, form) {\n    return accumulator.concat(Array.prototype.slice.call(form).filter(isFocusableInput));\n  }, []);\n}; //      \n\n/**\n * Finds the input by looking if the name attribute path is existing in the errors object\n */\n\n\nvar findInput = function findInput(inputs, errors) {\n  return inputs.find(function (input) {\n    return input.name && getIn(errors, input.name);\n  });\n}; //      \n\n\nvar noop = function noop() {};\n\nvar createDecorator = function createDecorator(getInputs, findInput$$1) {\n  return function (form) {\n    var focusOnFirstError = function focusOnFirstError(errors) {\n      if (!getInputs) {\n        getInputs = getAllInputs;\n      }\n\n      if (!findInput$$1) {\n        findInput$$1 = findInput;\n      }\n\n      var firstInput = findInput$$1(getInputs(), errors);\n\n      if (firstInput) {\n        firstInput.focus();\n      }\n    }; // Save original submit function\n\n\n    var originalSubmit = form.submit; // Subscribe to errors, and keep a local copy of them\n\n    var state = {};\n    var unsubscribe = form.subscribe(function (nextState) {\n      state = nextState;\n    }, {\n      errors: true,\n      submitErrors: true\n    }); // What to do after submit\n\n    var afterSubmit = function afterSubmit() {\n      var _state = state,\n          errors = _state.errors,\n          submitErrors = _state.submitErrors;\n\n      if (errors && Object.keys(errors).length) {\n        focusOnFirstError(errors);\n      } else if (submitErrors && Object.keys(submitErrors).length) {\n        focusOnFirstError(submitErrors);\n      }\n    }; // Rewrite submit function\n\n\n    form.submit = function () {\n      var result = originalSubmit.call(form);\n\n      if (result && typeof result.then === 'function') {\n        // async\n        result.then(afterSubmit, noop);\n      } else {\n        // sync\n        afterSubmit();\n      }\n\n      return result;\n    };\n\n    return function () {\n      unsubscribe();\n      form.submit = originalSubmit;\n    };\n  };\n}; //      \n\n/**\n * Generates a function to get all the inputs in a form with the specified name\n */\n\n\nvar getFormInputs = function getFormInputs(name) {\n  return function () {\n    if (typeof document === 'undefined') {\n      return [];\n    } // $FlowFixMe\n\n\n    var form = document.forms[name];\n    return form && form.length ? Array.prototype.slice.call(form).filter(isFocusableInput) : []; // cast cheat to get from HTMLFormElement children to FocusableInput\n  };\n}; //\n\n\nexport default createDecorator;\nexport { getFormInputs };","import createDecorator from \"final-form-focus\";\n\nexport const required = (value) => (value ? undefined : \"Required\");\n\nexport const composeValidators = (...validators) => (value) =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n\nexport const focusOnErrors = createDecorator();\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose'; //      \n\nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n}; //      \n\n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2; // object set\n\n\n    if (current === undefined || current === null) {\n      var _ref; // recurse\n\n\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error'; //      \n\n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n} //      \n\n\nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating']; //      \n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; //      \n\n\nfunction subscriptionFilter(dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n} //      \n\n\nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}; //      \n\n\nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited']; //      \n\nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n} //      \n\n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = function isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n};\n\nvar version = \"4.20.1\";\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };","import React from \"react\";\n\nimport Box from \"../Box\";\nimport Text from \"../Text\";\n\nexport default function PrimitiveField({\n  name,\n  id,\n  variant,\n  placeholder,\n  type,\n  onChange,\n  value,\n  sx,\n  defaultValue,\n  ...otherProps\n}) {\n  const isPristine = defaultValue === value || !value || value === \"\";\n  const handleChange = React.useCallback(\n    (e) => {\n      onChange && onChange(e);\n    },\n    [onChange]\n  );\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        fontSize: (theme) => theme.forms.input[variant].fontSize,\n        ...sx,\n      }}\n    >\n      <Box\n        as={type === \"textarea\" ? \"textarea\" : \"input\"}\n        id={id || name}\n        name={name}\n        type={type}\n        variant={`forms.input.${variant}`}\n        onChange={handleChange}\n        value={value}\n        sx={{\n          minHeight: \"100%\",\n          \"&[type=number]\": {\n            MozAppearance: \"textfield\",\n          },\n          \"&[type=number]::-webkit-inner-spin-button, &[type=number]::-webkit-outer-spin-button\": {\n            appearance: \"none\",\n            WebkitAppearance: \"none\",\n            MozAppearance: \"none\",\n            m: 0,\n          },\n          ...(type === \"textarea\" && {\n            borderRadius: [\"2.4rem\", \"2.4rem\"],\n            width: \"100% !important\",\n            minHeight: 100,\n            pr: \"75px\", // label space\n          }),\n        }}\n        {...otherProps}\n      />\n      <Text\n        as=\"label\"\n        htmlFor={id || name}\n        sx={{\n          pointerEvents: \"none\",\n          position: \"absolute\",\n          left: variant === \"simple\" ? \"2px\" : \"inputPadding\",\n          top: type === \"textarea\" ? \"30px\" : \"50%\",\n          cursor: \"text\",\n          whiteSpace: \"nowrap\",\n          transform: \"translate3d(0, -50%, 0)\",\n          color: (theme) => theme.forms.input[variant].color,\n          opacity: 0.5,\n          ...(!isPristine && {\n            left: \"auto\",\n            right: variant === \"simple\" ? \"2px\" : \"inputPadding\",\n            fontWeight: \"bold\",\n          }),\n        }}\n      >\n        <Text // We add an extra element so the font-size doesn't override parent's \"em\" unit\n          sx={{\n            display: \"block\",\n            ...(!isPristine && { fontSize: 1 }),\n          }}\n        >\n          {placeholder}\n        </Text>\n      </Text>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Field as RFField } from \"react-final-form\";\n\nimport Box from \"../Box\";\nimport BaseInput from \"../BaseInput\";\n\nconst Error = ({ name, variant, sx, immediate }) => (\n  <RFField\n    name={name}\n    subscribe={{ touched: true, error: true }}\n    render={({ meta: { touched, error, pristine } }) => {\n      return (touched && error) || (immediate && !pristine && error) ? (\n        <Box\n          sx={{\n            position: \"absolute\",\n            color: \"error\",\n            fontSize: 1,\n            fontWeight: \"bold\",\n            left: variant === \"simple\" ? \"2px\" : \"inputPadding\",\n            mt: \"-1px\",\n            ...sx,\n          }}\n        >\n          {error}\n        </Box>\n      ) : null;\n    }}\n  />\n);\n\nexport default function Field({\n  placeholder,\n  id,\n  name,\n  type = \"text\",\n  maxLength,\n  variant = \"default\",\n  component,\n  unit,\n  sx,\n  immediateValidation,\n  ...otherProps\n}) {\n  return (\n    <Box sx={{ position: \"relative\" }}>\n      {component ? (\n        <RFField\n          name={name}\n          id={id}\n          component={component}\n          placeholder={placeholder}\n          variant={variant}\n          sx={sx}\n          {...otherProps}\n        />\n      ) : (\n        <RFField name={name} {...otherProps}>\n          {({ input, meta: { pristine } }) => {\n            return (\n              <BaseInput\n                name={name}\n                id={id}\n                variant={variant}\n                placeholder={placeholder}\n                pristine={pristine}\n                value={input.value}\n                onChange={input.onChange}\n                type={type}\n                maxLength={maxLength}\n                sx={sx}\n              />\n            );\n          }}\n        </RFField>\n      )}\n      <Error name={name} variant={variant} immediate={immediateValidation} />\n    </Box>\n  );\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React__default, { createElement, createContext, useState, useEffect, useContext, useRef, useCallback, forwardRef } from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form'; // shared logic between components that use either render prop,\n// children render function, or component prop\n\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return /*#__PURE__*/createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.0\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\n\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = useRef(true);\n  var onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all$1 = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all$1 : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.name, format, formatOnBlur]),\n    onChange: useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type && component !== 'select';\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: useCallback(function (event) {\n      state.focus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      if (type === 'checkbox') {\n        if (_value === undefined) {\n          return !!state.value;\n        } else {\n          return !!(Array.isArray(state.value) && ~state.value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return state.value === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = /*#__PURE__*/forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error('prop name cannot be undefined in <Field> component');\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };"],"sourceRoot":""}